version: '3.7'

services:
  postgres:
    image: postgres:12.1
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - 5432:5432
    restart: always
    volumes:
      - .postgres_data:/var/lib/postgresql/data

  django: &base
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile
      args:
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_DB=${POSTGRES_DB}
    command: compose/django/start.sh
    depends_on:
      - postgres
      - celery
    environment:
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - 8000:8000
    restart: always
    volumes:
      - .:/code

  redis:
    image: redis:5.0.7-alpine
    restart: always

  celery:
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile
      args:
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_DB=${POSTGRES_DB}
    command: celery worker -A config.celery --concurrency=1
    depends_on:
      - redis
      - postgres
    environment:
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    restart: always
    volumes:
      - .:/code
