version: '3.7'

services:
  postgres:
    image: postgres:12.1
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - 5432:5432
    restart: always
    volumes:
      - .postgres_data:/var/lib/postgresql/data

  django: &base
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile
      args:
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_DB=${POSTGRES_DB}
    command: compose/django/start.sh
    depends_on:
      - postgres
      - celery
    environment:
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - 8000:8000
    restart: always
    user: ${USER_ID}
    volumes:
      - ./manage.py:/code/manage.py
      - ./requirements.txt:/code/requirements.txt
      - ./compose:/code/compose
      - ./config:/code/config
      - ./src:/code/src
      - ${FILES_PATH}:/code/files

  redis:
    image: redis:5.0.7-alpine
    restart: always

  celery:
    <<: *base
    command: celery worker -A config.celery --concurrency=1
    depends_on:
      - redis
      - postgres
    ports: []

  qbittorrent:
    image: linuxserver/qbittorrent:4.3.0202003011834-6876-b519eceubuntu18.04.1-ls16
    container_name: qbittorrent
    environment:
      - PUID=${USER_ID}
      - TZ=Europe/Amsterdam
      - WEBUI_PORT=8001
    volumes:
      - ${FILES_PATH}:/files
    ports:
      - 6881:6881
      - 6881:6881/udp
      - 8001:8001
    restart: always
